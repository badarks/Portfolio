head	1.5;
access;
symbols;
locks
	o2-cho:1.5; strict;
comment	@ * @;


1.5
date	2016.04.29.17.46.18;	author o2-cho;	state Exp;
branches;
next	1.4;

1.4
date	2016.04.27.21.03.12;	author o2-cho;	state Exp;
branches;
next	1.3;

1.3
date	2016.04.25.18.08.46;	author o2-cho;	state Exp;
branches;
next	1.2;

1.2
date	2016.04.24.15.29.02;	author o2-cho;	state Exp;
branches;
next	1.1;

1.1
date	2016.04.19.17.52.39;	author o2-cho;	state Exp;
branches;
next	;


desc
@Initial skeleton program
@


1.5
log
@All working without 2nd chance algorithm
@
text
@// RCS DATA AT END OF FILE

#define CHILD_MAX 18
#define MAX_RUNTIME 15
#define MAX_CHILD_MEM 32

// Data structure for page table
typedef struct {
    short page_tbl[CHILD_MAX][MAX_CHILD_MEM];    // Main page table
    unsigned int used[CHILD_MAX];                // 'used' bit vectors (one for each child)
    unsigned int dirty[CHILD_MAX];               // 'dirty' bit vectors (one for each child)
} pagetbl_t;

// Data structure for shared memory
typedef struct {
    unsigned int clock_sec;                      // Clock seconds
    unsigned int clock_milli;                    // Milliseconds since the last clock second
    unsigned int clock_nano;                     // Nanoseconds since the last clock second
    int child_running[CHILD_MAX];                // Run status of fork'd children
    pagetbl_t oss_paging;                        // Page table structure instance
    int mem_references[CHILD_MAX][2];            // Child memory references
} ipcd_t;


// RCS information:
// $Author: o2-cho $
// $Date: 2016/04/27 21:03:12 $
// $RCSfile: ipc_data.h,v $
// $Log: ipc_data.h,v $
// Revision 1.4  2016/04/27 21:03:12  o2-cho
// Add 2d array for memory references passed from child
//
// Revision 1.3  2016/04/25 18:08:46  o2-cho
// Moved page table into a separate structure
//
// Revision 1.2  2016/04/24 15:29:02  o2-cho
// Add bit vectors for memory management
//
// Revision 1.1  2016/04/19 17:52:39  o2-cho
// Initial revision
//
@


1.4
log
@Add 2d array for memory references passed from child
@
text
@d4 1
a4 1
#define MAX_RUNTIME 180
d27 1
a27 1
// $Date: 2016/04/25 18:08:46 $
d30 3
@


1.3
log
@Moved page table into a separate structure
@
text
@d21 1
d27 1
a27 1
// $Date: 2016/04/24 15:29:02 $
d30 3
@


1.2
log
@Add bit vectors for memory management
@
text
@d4 9
d20 1
a20 4
    short child_mem[CHILD_MAX];                  // Child page references
    unsigned int child_used[CHILD_MAX];          // 'used' bit vector for each child
    unsigned int child_dirty[CHILD_MAX];         // 'dirty' bit vector for each child
	unsigned long system_mem[4];                 // Allocation vectors for system memory
d26 1
a26 1
// $Date: 2016/04/19 17:52:39 $
d29 3
@


1.1
log
@Initial revision
@
text
@d7 8
a14 4
	unsigned int clock_sec;						// Clock seconds
	unsigned int clock_milli;					// Milliseconds since the last clock second
	unsigned int clock_nano;					// Nanoseconds since the last clock second
	int child_running[CHILD_MAX];				// Run status of fork'd children
d19 7
a25 4
// $Author:  $
// $Date:  $
// $RCSfile:  $
// $Log:  $
@
