head	1.2;
access;
symbols;
locks
	o2-cho:1.2; strict;
comment	@ * @;


1.2
date	2016.04.29.03.14.46;	author o2-cho;	state Exp;
branches;
next	1.1;

1.1
date	2016.04.19.17.51.43;	author o2-cho;	state Exp;
branches;
next	;


desc
@Initial skeleton program
@


1.2
log
@Many bug fixes
@
text
@// RCS DATA AT BOTTOM OF FILE

#include <stdio.h>                               // printf(), etc.
#include <stdlib.h>                              // exit()
#include <errno.h>                               // perror()
#include <time.h>                                // time()

// Log writer function
void writelog(char *msg, char *procname) {
    char msgerr[50] = "";                        // Hold a message

    // Set the log file name
    char logname[15] = "";
    sprintf(logname, "%s.log", procname);

    FILE *fp;
    if (!(fp = fopen(logname, "a"))) {
        sprintf(msgerr, "%s: opening %s", procname, logname);
        perror(msgerr);
        exit(1);
    }

    // Get the time
    time_t now;
    struct tm *timeinfo;
    time(&now);
    timeinfo = localtime(&now);

    // Write the time information to the log
    fprintf(fp, "%02d:%02d:%02d\t", timeinfo->tm_hour, timeinfo->tm_min, timeinfo->tm_sec);

    // Write the message to the log
    fprintf(fp, "%s:\t%s\n", procname, msg);

    // Close the log
    fclose(fp);
}



// RCS information:
// $Author: o2-cho $
// $Date: 2016/04/19 17:51:43 $
// $RCSfile: writelog.c,v $
// $Log: writelog.c,v $
// Revision 1.1  2016/04/19 17:51:43  o2-cho
// Initial revision
//
@


1.1
log
@Initial revision
@
text
@d3 4
a6 4
#include <stdio.h>								// printf(), etc.
#include <stdlib.h>								// exit()
#include <errno.h>								// perror()
#include <time.h>								// time()
d10 1
a10 1
	char msgerr[50] = "";						// Hold a message
d12 16
a27 16
	// Set the log file name
	char logname[15] = "";
	sprintf(logname, "%s.log", procname);

	FILE *fp;
	if (!(fp = fopen(logname, "a"))) {
		sprintf(msgerr, "%s: opening %s", procname, logname);
		perror(msgerr);
		exit(1);
	}

	// Get the time
	time_t now;
	struct tm *timeinfo;
	time(&now);
	timeinfo = localtime(&now);
d29 2
a30 2
	// Write the time information to the log
	fprintf(fp, "%02d:%02d:%02d\t", timeinfo->tm_hour, timeinfo->tm_min, timeinfo->tm_sec);
d32 2
a33 2
	// Write the message to the log
	fprintf(fp, "%s:\t%s\n", procname, msg);
d35 2
a36 2
	// Close the log
	fclose(fp);
d42 7
a48 4
// $Author:  $
// $Date:  $
// $RCSfile:  $
// $Log:  $
@
