head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2016.01.29.22.04.13;	author o2-cho;	state Exp;
branches;
next	1.2;

1.2
date	2016.01.29.10.51.59;	author o2-cho;	state Exp;
branches;
next	1.1;

1.1
date	2016.01.29.09.49.33;	author o2-cho;	state Exp;
branches;
next	;


desc
@main function start
@


1.3
log
@impleted savelog function and getlog function
fixed the garbage string printing on the log
@
text
@#include "log.h"
#include <stdio.h>

int main () {
	char *str;
	char *loadedLog;
	char *filename;
	time_t now;
	data_t data;

	// emptying the garbage string
	now = time(NULL);
	
	// user defined err msg here
	str = "buggy_code:\tError: Detailed error message";

	// initialize the data
	data.string = str;
	data.time = (time_t)ctime(&now);

	// add the data
	addmsg(data);
	
	// user defined err msg here
	str = "buggy_code:\tError: Detailed error message 2";

	// initialize the data
	data.string = str;
	data.time = (time_t)ctime(&now);

	// add the data
	addmsg(data);
	
	// load and print the data
	loadedLog = getlog();
	printf("%s%s", loadedLog, data.time);
	
	// save the log file
	filename = "error_log";
	savelog(filename);
	
	// clear allocated memory
	clearlog();
	return 0;
}@


1.2
log
@added test string and take cared of the garbage string output
@
text
@d1 1
a1 1
# include "log.h"
d6 2
d10 1
a10 1
	
d15 1
a15 1
	str = "Detailed error message\n";
d17 1
a17 1
	// assigning the values into the structure
d21 23
a43 1
	addMsg(data);
@


1.1
log
@Initial revision
@
text
@d1 21
@
